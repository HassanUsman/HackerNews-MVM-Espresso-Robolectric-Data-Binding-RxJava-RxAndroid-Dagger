apply plugin: 'com.android.application'
apply plugin: 'jacoco'

//run /.gradlew clean jacocoTestReport
task jacocoTestReport(type: JacocoReport, dependsOn: ['testMockDebugUnitTest', 'createMockDebugCoverageReport']) {

    group = "reporting"
    description = "Generate unified Jacoco code coverage report"

    reports {
        xml.enabled = false
        html.enabled = true
        csv.enabled = false
    }

    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*',
                      '**/*Fake*.*',
                      '**/*HttpClient*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/mock/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testMockDebugUnitTest.exec",
            "outputs/code-coverage/connected/flavors/MOCK/*coverage.ec"
    ])
}

jacoco {
    toolVersion '0.7.2.201409121644'
}

android {

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }

        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }

    compileSdkVersion 25
    defaultConfig {
        applicationId "com.hackernews.reader"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled = true
        }
    }

    flavorDimensions "default"

    productFlavors {
        mock {
            dimension "default"
            applicationIdSuffix = ".mock"
        }

        prod {
            dimension "default"
        }
    }

    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "com.android.support.test.espresso:espresso-idling-resource:$rootProject.ext.espressoVersion"

    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofitVersion"
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'

    implementation 'io.reactivex.rxjava2:rxjava:2.1.5'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    implementation "com.google.dagger:dagger:$rootProject.ext.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.ext.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.ext.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.ext.daggerVersion"

    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'org.hamcrest:hamcrest-library:1.3'
    implementation 'org.ocpsoft.prettytime:prettytime:4.0.1.Final'
    implementation 'org.sufficientlysecure:html-textview:3.5'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.7.22'
    testImplementation "org.robolectric:robolectric:3.5.1"

    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion"
}
